{
  "swagger": "2.0",
  "info": {
    "title": "Delivery API Documentation",
    "description": "API documentation for the delivery backend",
    "version": "1.0.0"
  },
  "host": "localhost:5555",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "paths": {
    "/category/create": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a new category",
        "description": "Creates a new category in the system",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully"
          },
          "400": {
            "description": "Invalid input or category already exists"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": ["Category"],
        "summary": "Get all categories",
        "description": "Retrieves all categories from the system",
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "404": {
            "description": "No categories found"
          },
          "500": {
            "description": "Failed to retrieve categories"
          }
        }
      }
    },
    "/category/": {
      "get": {
        "tags": ["Category"],
        "summary": "Get category by name",
        "description": "Retrieves a category by its name",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid or missing parameter: name"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/category/{id}/product": {
      "get": {
        "tags": ["Category"],
        "summary": "Get products by category ID",
        "description": "Retrieves all products for a given category ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully for this category",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "404": {
            "description": "No products found for this category"
          },
          "500": {
            "description": "Failed to retrieve products by category"
          }
        }
      }
    },
    "/category/{id}/update": {
      "put": {
        "tags": ["Category"],
        "summary": "Update a category",
        "description": "Updates a category by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid or missing parameters, or category name already exists"
          }
        }
      }
    },
    "/category/{id}/remove": {
      "delete": {
        "tags": ["Category"],
        "summary": "Delete a category",
        "description": "Deletes a category by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          },
          "400": {
            "description": "Invalid or missing parameter: id"
          }
        }
      }
    },
    "/product/create": {
      "post": {
        "tags": ["Product"],
        "summary": "Create a new product",
        "description": "Creates a new product in the system",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Invalid input or product already exists"
          }
        }
      }
    },
    "/product/": {
      "get": {
        "tags": ["Product"],
        "summary": "Get product by name",
        "description": "Retrieves a product by its name",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid or missing parameter: name"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get product by ID",
        "description": "Retrieves a product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": ["Product"],
        "summary": "Update a product",
        "description": "Updates a product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid or missing parameters"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Product"],
        "summary": "Get all products",
        "description": "Retrieves all products from the system",
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "404": {
            "description": "No products found"
          },
          "500": {
            "description": "Failed to retrieve products"
          }
        }
      }
    },
    "/product/{id}/category": {
      "put": {
        "tags": ["Product"],
        "summary": "Update product category",
        "description": "Updates the category of a product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product category updated successfully",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid or missing parameters"
          }
        }
      }
    },
    "/product/{id}/image": {
      "put": {
        "tags": ["Product"],
        "summary": "Update product image",
        "description": "Updates the image of a product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "imageUrl": {
                  "type": "string"
                }
              },
              "required": ["imageUrl"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product image updated successfully",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid or missing parameters"
          }
        }
      }
    },
    "/users/create/user": {
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "description": "Creates a new user in the system",
        "parameters": [
          {
            "username": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created with success"
          },
          "400": {
            "description": "User already exists"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login a user",
        "description": "Should do login in system",
        "parameters": [
          {
            "name":"body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User/login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": ["name"]
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "categoryId": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        }
      },
      "required": ["name", "price", "categoryId"]
    },
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "street": {
              "type": "string"
            },
            "number": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "zipCode": {
              "type": "string"
            }
          }
        }
      }, "login": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      }
    }
  }
}

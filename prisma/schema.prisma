generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @unique @default(uuid())
  username       String
  name           String
  email          String   @unique
  phone          String
  password       String
  isAdmin        Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  role           UserRole @default(CLIENT)
  address        Address?
  deliveryOrders Order[]  @relation("DeliveryMan")
  order          Order[]

  @@map("user")
}

model Address {
  id      String  @id @unique @default(uuid())
  street  String?
  number  String?
  city    String?
  zipCode String?
  userId  String  @unique @default(uuid())
  country String?
  user    User    @relation(fields: [userId], references: [id])

  @@map("address")
}

model Product {
  id          String         @id @unique @default(uuid())
  name        String         @unique
  description String         @db.VarChar(200)
  image       String
  price       Float
  situation   Boolean        @default(true)
  categoryId  String?        @default(uuid())
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  orders      OrderProduct[]
  category    Category?      @relation(fields: [categoryId], references: [id])

  @@map("product")
}

model Category {
  id        String    @id @unique @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]

  @@map("category")
}

model Order {
  id            String         @id @unique @default(uuid())
  userId        String
  totalAmount   Int
  discount      Int
  status        String
  createdAt     DateTime       @default(now())
  endAt         DateTime?
  deliveryManId String?
  deliveryMan   User?          @relation("DeliveryMan", fields: [deliveryManId], references: [id])
  user          User           @relation(fields: [userId], references: [id])
  products      OrderProduct[]

  @@unique([id, deliveryManId], name: "link_delivery_deliveryman")
  @@map("order")
}

model OrderProduct {
  orderId   String
  productId String
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
  @@map("orderProduct")
}

enum UserRole {
  CLIENT
  DELIVERY_MAN
  ADMIN
}
